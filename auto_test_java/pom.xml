<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>java_project</groupId>
    <artifactId>auto_test_java</artifactId>
    <version>1.0-SNAPSHOT</version>


    <dependencies>

        <!--http请求框架-->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.2</version>
        </dependency>


        <!--单元测试框架-->
<!--        tesng和allure集成报错java.lang.NoClassDefFoundError: org/testng/IInvokedMethodListener2是因为tetsng版本太高，改为6.10就好了-->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.10</version>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>org.testng</groupId>-->
<!--            <artifactId>testng</artifactId>-->
<!--            <version>6.14.3</version>-->
<!--            <scope>java</scope>-->
<!--        </dependency>-->

        <!--操作excel的开源框架-->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.17</version>
            <exclusions>
                <exclusion>
                    <artifactId>commons-codec</artifactId>
                    <groupId>commons-codec</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--json解析-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.47</version>
        </dependency>

        <!--连接数据库-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.37</version>
        </dependency>

        <!--日志框架-->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>


        <!--allure的testng插件-->
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-testng</artifactId>
            <version>2.7.0</version>
        </dependency>

    </dependencies>

    <!--allure版本信息-->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <timestamp>2017-05-16_18_56_43</timestamp>
        <allure.version>2.12.1</allure.version>
        <aspectj.version>1.7.4</aspectj.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
<!--<version>2.7.1</version>使用2.7.1版本即使改了forkMode和argLine，cmd里面执行mvc test依然中文乱码，换了2.19.1就好了-->
                <version>2.19.1</version>
                <configuration>
                    <!--忽略测试套件中执行失败的测试用例，继续执行剩余的测试方法-->
                    <testFailureIgnore>true</testFailureIgnore>
                    <!--指定过程中的编码格式-->
                 
<!--                    <forkMode>once</forkMode>-->
<!--                    <argLine>-Dfile.encoding=UTF-8</argLine>-->
                    <argLine>-javaagent:${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar</argLine>

                    <!--指定要构建时（执行测试套件）要执行的测试文件路径-->
                    <suiteXmlFiles>
                        <suiteXmlFile>testng.xml</suiteXmlFile>
                    </suiteXmlFiles>
                </configuration>

                <!--allure需要的aspectjweaver插件-->
                <dependencies>
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjweaver</artifactId>
                        <version>${aspectj.version}</version>
                    </dependency>
                </dependencies>

            </plugin>

        </plugins>
    </build>




</project>